{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\n//createStore wants pointer at a reducer function as a parameter\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","counterReducer","type","amount","store"],"sources":["/home/aman/Documents/udemy/maxi_react /redux/redux_counter/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux';\nimport {createSlice} from '@reduxjs/toolkit'\n\nconst initialState ={counter: 0 , showCounter: true,}\n\ncreateSlice({\n    name:'counter',\n    initialState: initialState,\n    reducers:{\n        increment(state){\n            state.counter++\n        },\n        decrement(state){\n            state.counter--\n        },\n        increase(state,action){\n            state.counter += action.payload\n        },\n        toggleCounter(state){\n             state.showCounter = !state.showCounter\n        }\n    }\n});\n\nconst counterReducer = (state =initialState, action )=>{\n    if(action.type === 'increment' ){\n        return{\n            counter: state.counter + 1,\n            showCounter : state.showCounter,\n        }\n    }\n    if(action.type === \"decrement\"){\n        return{\n            counter: state.counter - 1,\n            showCounter: state.showCounter,\n        }\n    }\n    if(action.type === 'increase'){\n        return{\n            counter : state.counter + action.amount,\n            showCounter: state.showCounter,\n        }\n    }\n\n    if(action.type === 'toggle'){\n        return{\n            showCounter: !state.showCounter,\n            counter: state.counter,\n        }\n    }\n\n    return state;\n} \n//createStore wants pointer at a reducer function as a parameter\nconst store = createStore(counterReducer);\n\nexport default store;\n\n\n\n\n\n\n\n\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAE;EAACC,OAAO,EAAE,CAAC;EAAGC,WAAW,EAAE;AAAK,CAAC;AAErDH,WAAW,CAAC;EACRI,IAAI,EAAC,SAAS;EACdH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACL,OAAO,EAAE;IACnB,CAAC;IACDM,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACL,OAAO,EAAE;IACnB,CAAC;IACDO,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACL,OAAO,IAAIQ,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MACfA,KAAK,CAACJ,WAAW,GAAG,CAACI,KAAK,CAACJ,WAAW;IAC3C;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMU,cAAc,GAAGA,CAACN,KAAK,GAAEN,YAAY,EAAES,MAAM,KAAI;EACnD,IAAGA,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;IAC5B,OAAM;MACFZ,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAGI,KAAK,CAACJ;IACxB,CAAC;EACL;EACA,IAAGO,MAAM,CAACI,IAAI,KAAK,WAAW,EAAC;IAC3B,OAAM;MACFZ,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EACA,IAAGO,MAAM,CAACI,IAAI,KAAK,UAAU,EAAC;IAC1B,OAAM;MACFZ,OAAO,EAAGK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACK,MAAM;MACvCZ,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAEA,IAAGO,MAAM,CAACI,IAAI,KAAK,QAAQ,EAAC;IACxB,OAAM;MACFX,WAAW,EAAE,CAACI,KAAK,CAACJ,WAAW;MAC/BD,OAAO,EAAEK,KAAK,CAACL;IACnB,CAAC;EACL;EAEA,OAAOK,KAAK;AAChB,CAAC;AACD;AACA,MAAMS,KAAK,GAAGjB,WAAW,CAACc,cAAc,CAAC;AAEzC,eAAeG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}